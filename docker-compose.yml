services:
  caddy:
    image: dunglas/frankenphp:latest-alpine
    container_name: murmur-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - ./:/app
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./frankenphp.json:/etc/frankenphp/config.json
      - caddy_data:/data
      - caddy_config:/config
      - app_logs:/var/log/caddy
      - frankenphp_logs:/var/log/frankenphp
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - METRICS_USER=${METRICS_USER:-admin}
      - METRICS_PASS=${METRICS_PASS:-password}
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/app/database/database.sqlite
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BROADCAST_DRIVER=pusher
      - PUSHER_APP_ID=${PUSHER_APP_ID}
      - PUSHER_APP_KEY=${PUSHER_APP_KEY}
      - PUSHER_APP_SECRET=${PUSHER_APP_SECRET}
      - PUSHER_HOST=soketi
      - PUSHER_PORT=6001
      - PUSHER_SCHEME=http
    depends_on:
      - redis
      - soketi
    networks:
      - murmur-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: murmur-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - murmur-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  soketi:
    image: quay.io/soketi/soketi:1.6-16-alpine
    container_name: murmur-soketi
    restart: unless-stopped
    ports:
      - "6001:6001"
      - "9601:9601"
    environment:
      - SOKETI_DEBUG=0
      - SOKETI_METRICS_SERVER_PORT=9601
      - SOKETI_DEFAULT_APP_ID=${PUSHER_APP_ID:-murmur}
      - SOKETI_DEFAULT_APP_KEY=${PUSHER_APP_KEY:-murmur-key}
      - SOKETI_DEFAULT_APP_SECRET=${PUSHER_APP_SECRET:-murmur-secret}
      - SOKETI_DEFAULT_APP_ENABLE_CLIENT_MESSAGES=true
      - SOKETI_DEFAULT_APP_ENABLED=true
      - SOKETI_DEFAULT_APP_MAX_CONNECTIONS=1000
      - SOKETI_DEFAULT_APP_MAX_BACKEND_EVENTS_PER_SEC=100
      - SOKETI_DEFAULT_APP_MAX_CLIENT_EVENTS_PER_SEC=100
      - SOKETI_DEFAULT_APP_MAX_READ_REQ_PER_SEC=100
    networks:
      - murmur-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6001/"]
      interval: 30s
      timeout: 10s
      retries: 3

  queue-worker:
    image: dunglas/frankenphp:latest-alpine
    container_name: murmur-queue
    restart: unless-stopped
    volumes:
      - ./:/app
    working_dir: /app
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/app/database/database.sqlite
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - murmur-network
    healthcheck:
      test: ["CMD", "php", "artisan", "queue:monitor", "--max-wait=60"]
      interval: 60s
      timeout: 30s
      retries: 3

  scheduler:
    image: dunglas/frankenphp:latest-alpine
    container_name: murmur-scheduler
    restart: unless-stopped
    volumes:
      - ./:/app
    working_dir: /app
    command: |
      sh -c "
        echo '* * * * * cd /app && php artisan schedule:run >> /var/log/cron.log 2>&1' | crontab -
        crond -f -l 2
      "
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/app/database/database.sqlite
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - murmur-network

  prometheus:
    image: prom/prometheus:latest
    container_name: murmur-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - murmur-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: murmur-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-password}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - murmur-network
    profiles:
      - monitoring

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  app_logs:
    driver: local
  frankenphp_logs:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  murmur-network:
    driver: bridge